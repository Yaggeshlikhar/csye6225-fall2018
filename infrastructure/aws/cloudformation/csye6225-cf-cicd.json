{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates a stack containing an IAM user, role, Three Policies and S3 Bucket",
  "Parameters": {
    "UserName": {
      "Type": "String",
      "Default": "Travis"
    },
    "TravisDeployToS3PolicyName": {
      "Type": "String",
      "Default": "Travis-Deploy-To-S3"
    },
    "TravisCodeDeployPolicyName": {
      "Type": "String",
      "Default": "Travis-Code-Deploy"
    },
    "domainName": {
      "Type": "String"
      
    },
    "ServerRegion": {
      "Type": "String",
      "Default": "us-east-1"
    },
    "AccId": {
      "Type": "String"
      
    },
    "ApplicationName": {
      "Type": "String",
      "Default": "webapp"
    }
    
  },
  "Resources": {
    "User": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": {
          "Ref": "UserName"
        }
      }
    },

"RoleForEC2Instance": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodeDeploy_EC2_Service_Role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                	"ec2.amazonaws.com"
                ]
              },
              "Action": [
              	"sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
          "arn:aws:iam::aws:policy/AmazonSNSFullAccess",
	  "arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy"
        ],
        "Path": "/",
    "Policies": [
                    {
                        "PolicyName": "Ec2_sns",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "sns:*",
                                    "Resource": "*"
                                }
                            ]
                        }		
                    }
                ]
      }
    },

"CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodeDeployServiceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole",
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda"
        ],
        "Path": "/"
      }
    },

    "TravisDeployToS3Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "TravisDeployToS3PolicyName"
        },
        "Users": [
          "Travis"
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "*"
              ]
            },
            {
                            "Effect": "Allow",
                            "Action": "lambda:*",
                            "Resource": "*"
                        }
          ]
        }
      },
      "DependsOn": "User"
    },
    "TravisCodeDeployPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "TravisCodeDeployPolicyName"
        },
        "Users": [
          "Travis"
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:RegisterApplicationRevision",
                "codedeploy:GetApplicationRevision"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn",
                      "aws",
                      "codedeploy",
                      {
                        "Ref": "ServerRegion"
                      },
                      {
                        "Ref": "AccId"
                      },
                      "application",
                      {
                        "Ref": "ApplicationName"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetDeployment"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codedeploy:GetDeploymentConfig"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn",
                      "aws",
                      "codedeploy",
                      {
                        "Ref": "ServerRegion"
                      },
                      {
                        "Ref": "AccId"
                      },
                      "deploymentconfig",
                      "CodeDeployDefault.OneAtATime"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn",
                      "aws",
                      "codedeploy",
                      {
                        "Ref": "ServerRegion"
                      },
                      {
                        "Ref": "AccId"
                      },
                      "deploymentconfig",
                      "CodeDeployDefault.HalfAtATime"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn",
                      "aws",
                      "codedeploy",
                      {
                        "Ref": "ServerRegion"
                      },
                      {
                        "Ref": "AccId"
                      },
                      "deploymentconfig",
                      "CodeDeployDefault.AllAtOnce"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      },
      "DependsOn": "User"
    },
    
    

    "RolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "CodeDeploy-Ec2-S3",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:*"
                            ],
                            "Resource":"*" 
                        },{
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:PutMetricData",
                                "ec2:DescribeTags",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams",
                                "logs:DescribeLogGroups",
                                "logs:CreateLogStream",
                                "logs:CreateLogGroup"
                            ],
                            "Resource": "*"
                        } 
                    ]
                },
                "Roles": [
                    {
                        "Ref": "RoleForEC2Instance"
                    }
                ]
            }
        },



    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "RoleForEC2Instance"
          }
        ]
      }
    },
    "CodeDeployApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ApplicationName": "CSYE6225CodeDeployApplication"
            }
    },

    "DeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "ApplicationName": "CSYE6225CodeDeployApplication",
                "DeploymentGroupName": "Codedeploy_groupname",
                "DeploymentStyle": {
                    "DeploymentType": "IN_PLACE",
                    "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
                },
                "Ec2TagFilters": [
                    {
                        "Key": "Name",
                        "Type": "KEY_AND_VALUE",
                        "Value": "MyEC2Instance"
                    }
                ],
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CodeDeployServiceRole",
                        "Arn"
                    ]
                }
            }
        },

    "CodeDeployLambdaServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": "CodeDeployLambdaServiceRole",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda",
                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
                ],
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Ec2_sns",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "sns:*",
                                    "Resource": "*"
                                }
                            ]
                        }		
                    }
                ]
            }
        },

"LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "LambdaRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
        			"arn:aws:iam::aws:policy/AWSLambdaFullAccess",
        			"arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
        			"arn:aws:iam::aws:policy/AmazonSESFullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
                ],
        "Path": "/",
    "Policies": [
                    {
                        "PolicyName": "lambda_DB",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:::*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*"
                                    ],
                                    "Resource": [
                                        "arn:aws:dynamodb:us-east-1::table/"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "sns:*",
                                    "Resource": "*"
                                }
                                
                            ]
                        }
                    }
                ]
              }
            },
"CodeDeployApplicationforLambda": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ApplicationName": "CSYE6225CodeDeploy-Lambda",
                "ComputePlatform": "Lambda"
            }
        },
"DeploymentGroupforLambda": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "ApplicationName": {
                    "Ref": "CodeDeployApplicationforLambda"
                },
                "DeploymentGroupName": "aws-lambda",
                "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
                "DeploymentStyle": {
                    "DeploymentType": "BLUE_GREEN",
                    "DeploymentOption": "WITH_TRAFFIC_CONTROL"
                },
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CodeDeployLambdaServiceRole",
                        "Arn"
                    ]
                }
            }
        },

        "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": {
          "Fn::Join": [
            ".",
            [
              "code-deploy",
              {
                "Ref": "domainName"
              }
            ]
          ]
        }
      }
    },

"EC2ToDynamoDBPolicy" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
      "PolicyName" : "EC2-DynamoDB-Policy",
      "PolicyDocument":{
        "Version": "2012-10-17",
        "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "dynamodb:*"
            ],
            "Resource": [
                "arn:aws:dynamodb:::*"
            ]
        }
    ]

      },
      "Roles" : [
        {
          "Ref" : "LambdaRole"
        }
      ]

    }

 },

"EC2ToSESPolicy" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
      "PolicyName" : "EC2-SES-Policy",
      "PolicyDocument":{
        "Version": "2012-10-17",
        "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "ses:*"
            ],
            "Resource": "*"
                
            
        }
    ]

      },
      "Roles" : [
        {
          "Ref" : "LambdaRole"
        }
      ]

    }

 }
},

"Outputs" : {
       
            "S3Bucket":{
                "Description":"S3Bucket",
                "Value":{"Ref":"S3Bucket"},
                "Export":{"Name":"S3Bucket"}
            },
      "LambdaRole":{
                "Description":"Lambda Role",
                "Value":{"Ref":"LambdaRole"},
                "Export":{"Name":"LambdaRole"}
            }
      }

  
}
